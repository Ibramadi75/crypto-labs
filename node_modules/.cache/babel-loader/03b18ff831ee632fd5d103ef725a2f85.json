{"ast":null,"code":"export default {\n  data() {\n    return {\n      cryptos: [{\n        symbol: \"ETHBTC\",\n        //used\n        priceChange: \"0.00121100\",\n        priceChangePercent: \"-1.560\",\n        // variation en % des dernières 24h\n        weightedAvgPrice: \"0.07852405\",\n        // prix moyen\n        prevClosePrice: \"0.07761100\",\n        lastPrice: \"0.07882200\",\n        // dernier prix //used\n        lastQty: \"0.26640000\",\n        // dernière quantité\n        bidPrice: \"0.07882400\",\n        // prix de l'offre\n        bidQty: \"6.95970000\",\n        // quantité d'enchère de l'offre\n        askPrice: \"0.07882500\",\n        // prix de la demande\n        askQty: \"6.65090000\",\n        // quantité de la demande\n        openPrice: \"0.07761100\",\n        // prix d'ouverture\n        highPrice: \"0.07942700\",\n        // prix le plus bas\n        lowPrice: \"0.07702500\",\n        // prix le plus haut\n        volume: \"88228.93570000\",\n        quoteVolume: \"6928.09329779\",\n        openTime: 1660224864370,\n        closeTime: 1660311264370,\n        firstId: 363558291,\n        lastId: 363789064,\n        count: 230774\n      }, {\n        symbol: \"LTCBTC\",\n        priceChange: \"0.00001300\",\n        priceChangePercent: \"0.509\",\n        weightedAvgPrice: \"0.00257442\",\n        prevClosePrice: \"0.00255500\",\n        lastPrice: \"0.00256800\",\n        lastQty: \"8.23600000\",\n        bidPrice: \"0.00256600\",\n        bidQty: \"18.84000000\",\n        askPrice: \"0.00256700\",\n        askQty: \"34.77700000\",\n        openPrice: \"0.00255500\",\n        highPrice: \"0.00259500\",\n        lowPrice: \"0.00253900\",\n        volume: \"55189.66700000\",\n        quoteVolume: \"142.08134077\",\n        openTime: 1660224863958,\n        closeTime: 1660311263958,\n        firstId: 82565804,\n        lastId: 82582323,\n        count: 16520\n      }],\n      trieur: \"\",\n      reponse: [],\n      askedForData: false,\n      btnList: [{\n        label: \"A-to-Z-btn\",\n        value: false\n      }, {\n        label: \"Z-to-A-btn\",\n        value: false\n      }, {\n        label: \"arrondirBtn\",\n        value: false\n      }],\n      modePro: false\n    };\n  },\n\n  methods: {\n    UpdatePost() {\n      if (!this.askedForData) {\n        this.askedForData = true;\n        setTimeout(() => {\n          this.UpdatePost(), $(\"#loading\").css(\"opacity\", \"0\");\n        }, 2500);\n      }\n\n      axios.get(\"https://api2.binance.com/api/v3/ticker/24hr\").then(response => this.cryptos = response.data, this.reponse = this.cryptos).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).then(function () {// always executed\n      }); // setTimeout(\n      // () => {this.UpdatePost()}, 4000\n      // );\n    },\n\n    Sort(list) {\n      list.sort((a, b) => {\n        return a.symbol > b.symbol ? 1 : -1;\n      });\n    },\n\n    SortRev(list) {\n      list.sort((b, a) => {\n        return a.symbol > b.symbol ? 1 : -1;\n      });\n    },\n\n    Tri(trieur) {\n      trieur = trieur.toUpperCase();\n      let reponse = [];\n\n      for (var i = 1; i < this.cryptos.length; i++) {\n        let x = this.cryptos[i];\n        let y = x.symbol;\n\n        if (y.includes(trieur)) {\n          reponse.push(x);\n        }\n      }\n\n      return this.reponse = reponse;\n    },\n\n    SetModePro(buttonId) {\n      if (this.modePro) {\n        $(\".items\").removeClass(\"items-modePro\"), this.modePro = false;\n      } else {\n        $(\".items\").addClass(\"items-modePro\"), this.modePro = true;\n      }\n    },\n\n    Selected(buttonId) {\n      let x = this.btnList.indexOf(buttonId);\n\n      if (this.btnList[x] == false) {} else {\n        $(buttonId).css(\"box-shadow\", \"none\");\n\n        for (var i = 0; i < this.btnList.length; i++) {\n          if (this.btnList[i].label == buttonId) {\n            // the variable is defined\n            let rep = this.btnList[i].value;\n\n            if (rep) {\n              this.btnList[i].value = false, $(\"#\" + buttonId).css(\"box-shadow\", \"none\");\n            } else {\n              this.btnList[i].value = true, $(\"#\" + buttonId).css(\"box-shadow\", \"rgba(50, 50, 93, 0.25) 0px 0px 0px -102px inset, rgba(0, 0, 0, 0.3) 0px 8px 26px -8px inset\");\n            }\n          }\n        }\n\n        if (buttonId == this.btnList[1].label) {\n          this.btnList[0].value = false, $(\"#\" + this.btnList[0].label).css(\"box-shadow\", \"none\");\n        } else if (buttonId == \"A-to-Z-btn\") {\n          this.btnList[1].value = false, $(\"#\" + this.btnList[1].label).css(\"box-shadow\", \"none\");\n        }\n      }\n    }\n\n  },\n\n  beforeMount() {\n    this.reponse = this.cryptos;\n  },\n\n  mounted() {}\n\n};\nimport { assertExpressionStatement } from \"@babel/types\";","map":{"version":3,"mappings":"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","names":["data","cryptos","symbol","priceChange","priceChangePercent","weightedAvgPrice","prevClosePrice","lastPrice","lastQty","bidPrice","bidQty","askPrice","askQty","openPrice","highPrice","lowPrice","volume","quoteVolume","openTime","closeTime","firstId","lastId","count","trieur","reponse","askedForData","btnList","label","value","modePro","methods","UpdatePost","setTimeout","$","css","axios","get","then","response","catch","error","console","log","Sort","list","sort","a","b","SortRev","Tri","toUpperCase","i","length","x","y","includes","push","SetModePro","buttonId","removeClass","addClass","Selected","indexOf","rep","beforeMount","mounted","assertExpressionStatement"],"sourceRoot":"","sources":["D:\\Mes travaux\\Vue Js\\crypto-labs\\src\\components\\HelloWorld.vue"],"sourcesContent":["<!-- nécéssite l'importation de jQuery et Axios -->\n<template>\n  <button @click=\"UpdatePost\" id=\"updateBtn\">Actualiser</button>\n  <button @click=\"Sort(this.reponse), Selected('A-to-Z-btn')\" id=\"A-to-Z-btn\">\n    A &rarr; Z\n  </button>\n  <button\n    @click=\"SortRev(this.reponse), Selected('Z-to-A-btn')\"\n    id=\"Z-to-A-btn\"\n  >\n    Z &rarr; A\n  </button>\n  <button\n    @click=\"SetModePro(), Selected('arrondirBtn')\"\n    id=\"arrondirBtn\"\n  >\n    Mode Pro\n  </button>\n  <input\n    type=\"text\"\n    v-model=\"trieur\"\n    placeholder=\"Cherchez une devise ici\"\n    @change=\"this.Tri(this.trieur)\"\n  />\n  <button @click=\"Tri(this.trieur)\">Trier</button>\n  <section id=\"crypto-main\">\n    <div class=\"items\" v-for=\"crypto in reponse\" v-bind:key=\"crypto.id\">\n      <div class=\"crypto_symbol\">\n        <span v-if=\"!modePro\"\n          >{{ crypto.symbol.slice(0, 6)\n          }}<span v-if=\"crypto.symbol.length > 6\">...</span></span\n        >\n        <span v-else>{{ crypto.symbol }}</span>\n      </div>\n      <div class=\"rest\">\n        <div class=\"lastPrice\" @click=\"SetModePro\">\n          <span v-if=\"!modePro\"\n            >{{ parseFloat(crypto.lastPrice).toFixed(4) }} $</span\n          >\n          <span v-else>{{ crypto.lastPrice }}$</span>\n        </div>\n        <div class=\"priceChangePercent\">\n          <span>{{ crypto.priceChangePercent }} % </span>\n          <img\n            v-if=\"crypto.priceChangePercent[0] != '-'\"\n            class=\"rowEvolve\"\n            src=\"../../public/images/augmenter.png\"\n            width=\"20\"\n          />\n          <img\n            v-if=\"crypto.priceChangePercent[0] == '-'\"\n            class=\"rowEvolve\"\n            src=\"../../public/images/augmenter.png\"\n            width=\"20\"\n            style=\"transform: scaleY(-1)\"\n          />\n        </div>\n        <div class=\"crypto_avgPrice\" @click=\"SetModePro\">\n          <span>Avg : </span>\n          <span v-if=\"!modePro\">{{ parseFloat(crypto.weightedAvgPrice).toFixed(4) }} \n            <span v-if=\"crypto.symbol.length <= 6\">{{(crypto.symbol).slice(-3)}}</span>\n            <span v-else>{{(crypto.symbol).slice(-4)}}</span>\n          </span>\n          <span v-else>\n            <span v-if=\"crypto.symbol.length <= 6\">{{ crypto.weightedAvgPrice }} {{(crypto.symbol).slice(-3)}}</span>\n            <span v-else>{{ crypto.weightedAvgPrice }} {{(crypto.symbol).slice(-4)}}</span>\n          </span>\n        </div>\n        <div class=\"modePro-infos\" v-if=\"modePro\">\n          <div class=\"crypto_priceChange\">Price change : {{crypto.priceChange}}</div>\n          <div class=\"crypto_volume\">Volume : {{crypto.volume}}</div>\n          <div></div>\n        </div>\n      </div>\n    </div>\n  </section>\n  <div v-if=\"this.askedForData\" id=\"loading\"></div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      cryptos: [\n        {\n          symbol: \"ETHBTC\", //used\n          priceChange: \"0.00121100\",\n          priceChangePercent: \"-1.560\", // variation en % des dernières 24h\n          weightedAvgPrice: \"0.07852405\", // prix moyen\n          prevClosePrice: \"0.07761100\",\n          lastPrice: \"0.07882200\", // dernier prix //used\n          lastQty: \"0.26640000\", // dernière quantité\n          bidPrice: \"0.07882400\", // prix de l'offre\n          bidQty: \"6.95970000\", // quantité d'enchère de l'offre\n          askPrice: \"0.07882500\", // prix de la demande\n          askQty: \"6.65090000\", // quantité de la demande\n          openPrice: \"0.07761100\", // prix d'ouverture\n          highPrice: \"0.07942700\", // prix le plus bas\n          lowPrice: \"0.07702500\", // prix le plus haut\n          volume: \"88228.93570000\",\n          quoteVolume: \"6928.09329779\",\n          openTime: 1660224864370,\n          closeTime: 1660311264370,\n          firstId: 363558291,\n          lastId: 363789064,\n          count: 230774,\n        },\n        {\n          symbol: \"LTCBTC\",\n          priceChange: \"0.00001300\",\n          priceChangePercent: \"0.509\",\n          weightedAvgPrice: \"0.00257442\",\n          prevClosePrice: \"0.00255500\",\n          lastPrice: \"0.00256800\",\n          lastQty: \"8.23600000\",\n          bidPrice: \"0.00256600\",\n          bidQty: \"18.84000000\",\n          askPrice: \"0.00256700\",\n          askQty: \"34.77700000\",\n          openPrice: \"0.00255500\",\n          highPrice: \"0.00259500\",\n          lowPrice: \"0.00253900\",\n          volume: \"55189.66700000\",\n          quoteVolume: \"142.08134077\",\n          openTime: 1660224863958,\n          closeTime: 1660311263958,\n          firstId: 82565804,\n          lastId: 82582323,\n          count: 16520,\n        },\n      ],\n      trieur: \"\",\n      reponse: [],\n      askedForData: false,\n      btnList: [\n        {\n          label: \"A-to-Z-btn\",\n          value: false,\n        },\n        {\n          label: \"Z-to-A-btn\",\n          value: false,\n        },\n        {\n          label: \"arrondirBtn\",\n          value: false,\n        },\n      ],\n      modePro: false,\n    };\n  },\n  methods: {\n    UpdatePost() {\n      if (!this.askedForData) {\n        this.askedForData = true;\n        setTimeout(() => {\n          this.UpdatePost(), $(\"#loading\").css(\"opacity\", \"0\");\n        }, 2500);\n      }\n      axios\n        .get(\"https://api2.binance.com/api/v3/ticker/24hr\")\n        .then(\n          (response) => (this.cryptos = response.data),\n          (this.reponse = this.cryptos)\n        )\n        .catch(function (error) {\n          // handle error\n          console.log(error);\n        })\n        .then(function () {\n          // always executed\n        });\n\n      // setTimeout(\n      // () => {this.UpdatePost()}, 4000\n      // );\n    },\n    Sort(list) {\n      list.sort((a, b) => {\n        return a.symbol > b.symbol ? 1 : -1;\n      });\n    },\n    SortRev(list) {\n      list.sort((b, a) => {\n        return a.symbol > b.symbol ? 1 : -1;\n      });\n    },\n    Tri(trieur) {\n      trieur = trieur.toUpperCase();\n      let reponse = [];\n      for (var i = 1; i < this.cryptos.length; i++) {\n        let x = this.cryptos[i];\n        let y = x.symbol;\n        if (y.includes(trieur)) {\n          reponse.push(x);\n        }\n      }\n      return (this.reponse = reponse);\n    },\n    SetModePro(buttonId) {\n      if (this.modePro) {\n        $(\".items\").removeClass(\"items-modePro\"),\n        this.modePro = false\n      } else {\n        $(\".items\").addClass(\"items-modePro\"),\n        this.modePro = true\n      }\n    },\n    Selected(buttonId) {\n      let x = this.btnList.indexOf(buttonId);\n      if (this.btnList[x] == false) {\n      } else {\n        $(buttonId).css(\"box-shadow\", \"none\");\n        for (var i = 0; i < this.btnList.length; i++) {\n          if (this.btnList[i].label == buttonId) {\n            // the variable is defined\n            let rep = this.btnList[i].value;\n            if (rep) {\n              (this.btnList[i].value = false),\n                $(\"#\" + buttonId).css(\"box-shadow\", \"none\");\n            } else {\n              (this.btnList[i].value = true),\n                $(\"#\" + buttonId).css(\n                  \"box-shadow\",\n                  \"rgba(50, 50, 93, 0.25) 0px 0px 0px -102px inset, rgba(0, 0, 0, 0.3) 0px 8px 26px -8px inset\"\n                );\n            }\n          }\n        }\n        if (buttonId == this.btnList[1].label) {\n          (this.btnList[0].value = false),\n            $(\"#\" + this.btnList[0].label).css(\"box-shadow\", \"none\");\n        } else if (buttonId == \"A-to-Z-btn\") {\n          (this.btnList[1].value = false),\n            $(\"#\" + this.btnList[1].label).css(\"box-shadow\", \"none\");\n        }\n      }\n    }\n  },\n  beforeMount() {\n    this.reponse = this.cryptos;\n  },\n  mounted() {},\n};\n\nimport { assertExpressionStatement } from \"@babel/types\";\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n#crypto-main {\n  width: 80%;\n}\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: block;\n  margin: 20px 10px;\n}\na {\n  color: #42b983;\n}\n.items-modePro.items-modePro{\n  width: 28%;\n}\n.items {\n  width:22% ;\n  min-height: 70px;\n  border-radius: 15px;\n  background: #ffffffe0;\n  min-width: 200px;\n  max-width: 45%;\n  margin: 1%;\n  padding-left: 20px;\n  font-size: 12px;\n  margin-top: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: rgba(100, 100, 111, 0.2) 0px 13px 9px 0px;\n}\n\n.items > div {\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  margin-right: 5px;\n}\n#crypto-main {\n  margin: auto;\n  margin-top: 50px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n}\n.crypto_symbol {\n  color: rgba(0, 0, 0, 0.795);\n  font-size: 18px;\n  font-weight: 700;\n}\n.rest {\n  margin: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 70%;\n}\nimg {\n  vertical-align: bottom;\n}\n.crypto_avgPrice {\n  margin-top: 5px;\n  white-space: nowrap;\n}\n#loading {\n  width: 100px;\n  height: 10px;\n\n  position: fixed;\n  top: 50%;\n  left: 45%;\n  transform: translate(-50%, -50%);\n\n  border-radius: 10px;\n}\n#loading::before {\n  background-color: rgba(53, 66, 187, 0.39);\n\n  position: absolute;\n  content: \" \";\n  width: 10px;\n  height: 10px;\n\n  animation: loadingAnimation infinite 1s linear;\n}\n@keyframes loadingAnimation {\n  0% {\n    width: 10px;\n    margin-left: 90px;\n  }\n  25% {\n    width: 100px;\n    margin-left: 0%;\n  }\n  50% {\n    width: 10px;\n    margin-left: 0%;\n  }\n  75% {\n    width: 100px;\n    margin-left: 0%;\n  }\n  100% {\n    width: 10px;\n    margin-left: 90px;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}