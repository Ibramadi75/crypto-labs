{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../../public/images/augmenter.png';\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-469af010\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"crypto-main\"\n};\nconst _hoisted_2 = {\n  class: \"symbols\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1\n};\nconst _hoisted_6 = {\n  class: \"rest\"\n};\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = {\n  key: 1\n};\nconst _hoisted_9 = {\n  class: \"priceChangePercent\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"rowEvolve\",\n  src: _imports_0,\n  width: \"20\"\n};\nconst _hoisted_11 = {\n  key: 1,\n  class: \"rowEvolve\",\n  src: _imports_0,\n  width: \"20\",\n  style: {\n    \"transform\": \"scaleY(-1)\"\n  }\n};\n\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Avg : \", -1\n/* HOISTED */\n));\n\nconst _hoisted_13 = {\n  key: 0\n};\nconst _hoisted_14 = {\n  key: 1\n};\n\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"graphs\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_16 = {\n  key: 0,\n  id: \"loading\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.UpdatePost && $options.UpdatePost(...args)),\n    id: \"updateBtn\"\n  }, \"Actualiser\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => ($options.Sort(this.reponse), $options.Selected('A-to-Z-btn'))),\n    id: \"A-to-Z-btn\"\n  }, \"A → Z\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => ($options.SortRev(this.reponse), $options.Selected('Z-to-A-btn'))),\n    id: \"Z-to-A-btn\"\n  }, \"Z → A\"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = $event => ($options.Arrondir(), $options.Selected('arrondirBtn'))),\n    id: \"arrondirBtn\"\n  }, \"Mode Pro\"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.trieur = $event),\n    placeholder: \"Cherchez une devise ici\",\n    onChange: _cache[5] || (_cache[5] = $event => this.Tri(this.trieur))\n  }, null, 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), [[_vModelText, $data.trieur]]), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = $event => $options.Tri(this.trieur))\n  }, \"Trier\"), _createElementVNode(\"section\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.reponse, crypto => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"items\",\n      key: crypto.id\n    }, [_createElementVNode(\"div\", _hoisted_2, [$data.arrondir ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, [_createTextVNode(_toDisplayString(crypto.symbol.slice(0, 6)), 1\n    /* TEXT */\n    ), crypto.symbol.length > 6 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, \"...\")) : _createCommentVNode(\"v-if\", true)])) : (_openBlock(), _createElementBlock(\"span\", _hoisted_5, _toDisplayString(crypto.symbol), 1\n    /* TEXT */\n    ))]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", {\n      class: \"lastPrice\",\n      onClick: _cache[7] || (_cache[7] = (...args) => $options.Arrondir && $options.Arrondir(...args))\n    }, [$data.arrondir ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, _toDisplayString(parseFloat(crypto.lastPrice).toFixed(4)) + \" $\", 1\n    /* TEXT */\n    )) : (_openBlock(), _createElementBlock(\"span\", _hoisted_8, _toDisplayString(crypto.lastPrice) + \"$\", 1\n    /* TEXT */\n    ))]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"span\", null, _toDisplayString(crypto.priceChangePercent) + \" % \", 1\n    /* TEXT */\n    ), crypto.priceChangePercent[0] != '-' ? (_openBlock(), _createElementBlock(\"img\", _hoisted_10)) : _createCommentVNode(\"v-if\", true), crypto.priceChangePercent[0] == '-' ? (_openBlock(), _createElementBlock(\"img\", _hoisted_11)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", {\n      class: \"avgPrice\",\n      onClick: _cache[8] || (_cache[8] = (...args) => $options.Arrondir && $options.Arrondir(...args))\n    }, [_hoisted_12, $data.arrondir ? (_openBlock(), _createElementBlock(\"span\", _hoisted_13, _toDisplayString(parseFloat(crypto.weightedAvgPrice).toFixed(4)) + \" $\", 1\n    /* TEXT */\n    )) : (_openBlock(), _createElementBlock(\"span\", _hoisted_14, _toDisplayString(crypto.weightedAvgPrice) + \"$\", 1\n    /* TEXT */\n    ))]), _hoisted_15])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), this.askedForData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16)) : _createCommentVNode(\"v-if\", true)], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":"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","names":["_imports_0","id","class","src","width","style","_createElementVNode","onClick","$options","reponse","type","$data","$event","placeholder","onChange","Tri","trieur","_createElementBlock","_Fragment","_renderList","crypto","key","_hoisted_3","symbol","slice","length","_hoisted_4","_hoisted_5","_toDisplayString","_hoisted_7","parseFloat","lastPrice","toFixed","_hoisted_8","priceChangePercent","_hoisted_12","_hoisted_13","weightedAvgPrice","_hoisted_14","_hoisted_15","askedForData"],"sourceRoot":"","sources":["D:\\Mes travaux\\Vue Js\\crypto-labs\\src\\components\\HelloWorld.vue"],"sourcesContent":["<!-- nécéssite l'importation de jQuery et Axios -->\n<template>\n  <button @click=\"UpdatePost\" id=\"updateBtn\">Actualiser</button>\n  <button @click=\"Sort(this.reponse), Selected('A-to-Z-btn')\" id=\"A-to-Z-btn\">A &rarr; Z</button>\n  <button @click=\"SortRev(this.reponse), Selected('Z-to-A-btn')\" id=\"Z-to-A-btn\">Z &rarr; A</button>\n  <button @click=\"Arrondir(), Selected('arrondirBtn')\" id=\"arrondirBtn\">Mode Pro</button>\n  <input\n    type=\"text\"\n    v-model=\"trieur\"\n    placeholder=\"Cherchez une devise ici\"\n    @change=\"this.Tri(this.trieur)\"\n  />\n  <button @click=\"Tri(this.trieur)\">Trier</button>\n  <section id=\"crypto-main\">\n    <div class=\"items\" v-for=\"crypto in reponse\" v-bind:key=\"crypto.id\">\n      <div class=\"symbols\" >\n        <span v-if=\"arrondir\">{{ crypto.symbol.slice(0,6) }}<span v-if=\"crypto.symbol.length > 6\">...</span></span>\n        <span v-else>{{ crypto.symbol }}</span>\n      </div>\n      <div class=\"rest\">\n        <div class=\"lastPrice\" @click=\"Arrondir\">\n          <span v-if=\"arrondir\">{{ parseFloat(crypto.lastPrice).toFixed(4) }} $</span\n          >\n          <span v-else>{{ crypto.lastPrice }}$</span>\n        </div>\n        <div class=\"priceChangePercent\">\n          <span>{{ crypto.priceChangePercent }} % </span>\n          <img\n            v-if=\"crypto.priceChangePercent[0] != '-'\"\n            class=\"rowEvolve\"\n            src=\"../../public/images/augmenter.png\"\n            width=\"20\"\n          />\n          <img\n            v-if=\"crypto.priceChangePercent[0] == '-'\"\n            class=\"rowEvolve\"\n            src=\"../../public/images/augmenter.png\"\n            width=\"20\"\n            style=\"transform: scaleY(-1)\"\n          />\n        </div>\n        <div class=\"avgPrice\" @click=\"Arrondir\">\n          <span>Avg : </span>\n          <span v-if=\"arrondir\"\n            >{{ parseFloat(crypto.weightedAvgPrice).toFixed(4) }} $</span\n          >\n          <span v-else>{{ crypto.weightedAvgPrice }}$</span>\n        </div>\n        <div class=\"graphs\"></div>\n      </div>\n    </div>\n  </section>\n  <div v-if=\"this.askedForData\" id=\"loading\"></div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      cryptos: [\n        // {\n        //   symbol: \"ETHBTC\",\n        //   priceChange: \"0.00121100\",\n        //   priceChangePercent: \"-1.560\", // variation en % des dernières 24h\n        //   weightedAvgPrice: \"0.07852405\", // prix moyen\n        //   prevClosePrice: \"0.07761100\",\n        //   lastPrice: \"0.07882200\", // dernier prix\n        //   lastQty: \"0.26640000\", // dernière quantité\n        //   bidPrice: \"0.07882400\", // prix de l'offre\n        //   bidQty: \"6.95970000\", // quantité d'enchère de l'offre\n        //   askPrice: \"0.07882500\", // prix de la demande\n        //   askQty: \"6.65090000\", // quantité de la demande\n        //   openPrice: \"0.07761100\", // prix d'ouverture\n        //   highPrice: \"0.07942700\", // prix le plus bas\n        //   lowPrice: \"0.07702500\", // prix le plus haut\n        //   volume: \"88228.93570000\",\n        //   quoteVolume: \"6928.09329779\",\n        //   openTime: 1660224864370,\n        //   closeTime: 1660311264370,\n        //   firstId: 363558291,\n        //   lastId: 363789064,\n        //   count: 230774,\n        // },\n        // {\n        //   symbol: \"LTCBTC\",\n        //   priceChange: \"0.00001300\",\n        //   priceChangePercent: \"0.509\",\n        //   weightedAvgPrice: \"0.00257442\",\n        //   prevClosePrice: \"0.00255500\",\n        //   lastPrice: \"0.00256800\",\n        //   lastQty: \"8.23600000\",\n        //   bidPrice: \"0.00256600\",\n        //   bidQty: \"18.84000000\",\n        //   askPrice: \"0.00256700\",\n        //   askQty: \"34.77700000\",\n        //   openPrice: \"0.00255500\",\n        //   highPrice: \"0.00259500\",\n        //   lowPrice: \"0.00253900\",\n        //   volume: \"55189.66700000\",\n        //   quoteVolume: \"142.08134077\",\n        //   openTime: 1660224863958,\n        //   closeTime: 1660311263958,\n        //   firstId: 82565804,\n        //   lastId: 82582323,\n        //   count: 16520,\n        // },\n      ],\n      trieur: \"\",\n      reponse: [],\n      arrondir: true,\n      askedForData: false,\n      btnList: [\n        {\n          label : 'A-to-Z-btn', value : false\n        },\n        {\n          label : 'Z-to-A-btn', value : false\n        },\n        {\n          label : 'arrondirBtn', value : false\n        }\n      ]\n    };\n  },\n  methods: {\n    UpdatePost() {\n      if (!this.askedForData){\n        this.askedForData = true;\n        setTimeout(\n          () => {this.UpdatePost(), $( '#loading' ).css('opacity', '0') }, 2500\n          ); \n      }\n      axios\n        .get(\"https://api2.binance.com/api/v3/ticker/24hr\")\n        .then(\n          (response) => (this.cryptos = response.data),\n          (this.reponse = this.cryptos)\n        )\n        .catch(function (error) {\n          // handle error\n          console.log(error);\n        })\n        .then(function () {\n          // always executed\n        });\n\n      // setTimeout(\n        // () => {this.UpdatePost()}, 4000\n      // ); \n    },\n    Sort(list) {\n      list.sort((a, b) => {\n        return a.symbol > b.symbol ? 1 : -1;\n      });\n    },\n    SortRev(list) {\n      list.sort((b, a) => {\n        return a.symbol > b.symbol ? 1 : -1;\n      });\n    },\n    Tri(trieur) {\n      trieur = trieur.toUpperCase();\n      let reponse = [];\n      for (var i = 1; i < this.cryptos.length; i++) {\n        let x = this.cryptos[i];\n        let y = x.symbol;\n        if (y.includes(trieur)) {\n          reponse.push(x);\n        }\n      }\n      return (this.reponse = reponse);\n    },\n    Arrondir(buttonId) {\n      if (this.arrondir){\n        this.arrondir = false, $( '.items' ).css('width', '25%');\n      } else{\n        this.arrondir = true,\n        $( '.items' ).css('width','20%')\n      }\n    },\n    Selected(buttonId) {\n      let x = this.btnList.indexOf(buttonId);\n      if (this.btnList[x] == false){\n        \n      }else{\n         $( buttonId ).css('box-shadow', 'none');\n          for (var i = 0; i < this.btnList.length; i++){\n            if (this.btnList[i].label == buttonId) {\n              // the variable is defined\n              let rep = this.btnList[i].value;\n              if (rep){\n                this.btnList[i].value = false,\n                $( '#' + buttonId ).css('box-shadow', 'none')\n              }else{\n                this.btnList[i].value = true, \n                $( '#' + buttonId ).css('box-shadow', 'rgba(50, 50, 93, 0.25) 0px 0px 0px -102px inset, rgba(0, 0, 0, 0.3) 0px 8px 26px -8px inset');\n              }\n            }\n          }\n          if(buttonId == this.btnList[1].label){\n              this.btnList[0].value = false,\n              $( '#' + this.btnList[0].label ).css('box-shadow', 'none')\n            }else if(buttonId == 'A-to-Z-btn'){\n              this.btnList[1].value = false,\n              $( '#' + this.btnList[1].label ).css('box-shadow', 'none')\n            }\n        }\n      }\n    },\n  beforeMount() {\n  },\n  mounted() {},\n};\n\nimport { assertExpressionStatement } from \"@babel/types\";\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n#crypto-main {\n  width: 80%;\n}\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: block;\n  margin: 20px 10px;\n}\na {\n  color: #42b983;\n}\n.items {\n  width: 20%;\n  height: 70px;\n  border-radius: 15px;\n  background: #f5f5f5e0;\n  min-width: 200px;\n  margin: 1%;\n  padding-left: 20px;\n  font-size: 12px;\n  margin-top: 50px;\n}\n.items > div {\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  margin-right: 5px;\n}\n#crypto-main {\n  margin: auto;\n  margin-top: 50px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n}\n.symbols {\n  color: rgba(0, 0, 0, 0.795);\n  font-size: 18px;\n  font-weight: 700;\n}\n.items {\n  display: flex;\n  align-items: center;\n  box-shadow: rgba(100, 100, 111, 0.2) 0px 13px 9px 0px;\n}\n.rest {\n  margin: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\nimg {\n  vertical-align: bottom;\n}\n.avgPrice {\n  margin-top: 5px;\n    white-space: nowrap;\n}\n#loading{\n  width: 100px;\n  height: 10px;\n\n  position: fixed;\n  top: 50%;\n  left: 45%;\n  transform: translate(-50%, -50%);\n\n  border-radius: 10px;\n}\n#loading::before{\n  background-color:rgba(53, 66, 187, 0.39);\n\n  position: absolute;\n  content: \" \";\n  width: 10px;\n  height: 10px;\n\n  animation: loadingAnimation infinite 1s linear;\n}\n@keyframes loadingAnimation {\n  0%{\n    width: 10px;\n    margin-left: 90px;\n  }\n  25%{\n    width:100px;\n    margin-left: 0%;\n  }\n  50%{\n    width:10px;\n    margin-left: 0%;\n  }\n  75%{\n    width:100px;\n    margin-left: 0%;\n  }\n  100%{\n    width:10px;\n    margin-left: 90px;\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module"}