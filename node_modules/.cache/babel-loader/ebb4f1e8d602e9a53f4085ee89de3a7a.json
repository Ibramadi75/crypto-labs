{"ast":null,"code":"export default {\n  data() {\n    return {\n      cryptos: [// {\n        //   symbol: \"ETHBTC\",\n        //   priceChange: \"0.00121100\",\n        //   priceChangePercent: \"-1.560\", // variation en % des dernières 24h\n        //   weightedAvgPrice: \"0.07852405\", // prix moyen\n        //   prevClosePrice: \"0.07761100\",\n        //   lastPrice: \"0.07882200\", // dernier prix\n        //   lastQty: \"0.26640000\", // dernière quantité\n        //   bidPrice: \"0.07882400\", // prix de l'offre\n        //   bidQty: \"6.95970000\", // quantité d'enchère de l'offre\n        //   askPrice: \"0.07882500\", // prix de la demande\n        //   askQty: \"6.65090000\", // quantité de la demande\n        //   openPrice: \"0.07761100\", // prix d'ouverture\n        //   highPrice: \"0.07942700\", // prix le plus bas\n        //   lowPrice: \"0.07702500\", // prix le plus haut\n        //   volume: \"88228.93570000\",\n        //   quoteVolume: \"6928.09329779\",\n        //   openTime: 1660224864370,\n        //   closeTime: 1660311264370,\n        //   firstId: 363558291,\n        //   lastId: 363789064,\n        //   count: 230774,\n        // },\n        // {\n        //   symbol: \"LTCBTC\",\n        //   priceChange: \"0.00001300\",\n        //   priceChangePercent: \"0.509\",\n        //   weightedAvgPrice: \"0.00257442\",\n        //   prevClosePrice: \"0.00255500\",\n        //   lastPrice: \"0.00256800\",\n        //   lastQty: \"8.23600000\",\n        //   bidPrice: \"0.00256600\",\n        //   bidQty: \"18.84000000\",\n        //   askPrice: \"0.00256700\",\n        //   askQty: \"34.77700000\",\n        //   openPrice: \"0.00255500\",\n        //   highPrice: \"0.00259500\",\n        //   lowPrice: \"0.00253900\",\n        //   volume: \"55189.66700000\",\n        //   quoteVolume: \"142.08134077\",\n        //   openTime: 1660224863958,\n        //   closeTime: 1660311263958,\n        //   firstId: 82565804,\n        //   lastId: 82582323,\n        //   count: 16520,\n        // },\n      ],\n      trieur: \"\",\n      reponse: [],\n      arrondir: true,\n      askedForData: false,\n      btnList: [{\n        label: 'A-to-Z-btn',\n        value: false\n      }, {\n        label: 'Z-to-A-btn',\n        value: false\n      }, {\n        label: 'arrondirBtn',\n        value: false\n      }]\n    };\n  },\n\n  methods: {\n    UpdatePost() {\n      if (!this.askedForData) {\n        this.askedForData = true;\n        setTimeout(() => {\n          this.UpdatePost(), $('#loading').css('opacity', '0');\n        }, 2500);\n      }\n\n      axios.get(\"https://api2.binance.com/api/v3/ticker/24hr\").then(response => this.cryptos = response.data, this.reponse = this.cryptos).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).then(function () {// always executed\n      }); // setTimeout(\n      // () => {this.UpdatePost()}, 4000\n      // ); \n    },\n\n    Sort(list) {\n      list.sort((a, b) => {\n        return a.symbol > b.symbol ? 1 : -1;\n      });\n    },\n\n    SortRev(list) {\n      list.sort((b, a) => {\n        return a.symbol > b.symbol ? 1 : -1;\n      });\n    },\n\n    Tri(trieur) {\n      trieur = trieur.toUpperCase();\n      let reponse = [];\n\n      for (var i = 1; i < this.cryptos.length; i++) {\n        let x = this.cryptos[i];\n        let y = x.symbol;\n\n        if (y.includes(trieur)) {\n          reponse.push(x);\n        }\n      }\n\n      return this.reponse = reponse;\n    },\n\n    Arrondir(buttonId) {\n      if (this.arrondir) {\n        this.arrondir = false, $('.items').css('width', '25%');\n      } else {\n        this.arrondir = true, $('.items').css('width', '20%');\n      }\n    },\n\n    Selected(buttonId) {\n      let x = this.btnList.indexOf(buttonId);\n\n      if (this.btnList[x] == false) {} else {\n        $(buttonId).css('box-shadow', 'none');\n\n        for (var i = 0; i < this.btnList.length; i++) {\n          if (this.btnList[i].label == buttonId) {\n            // the variable is defined\n            let rep = this.btnList[i].value;\n\n            if (rep) {\n              this.btnList[i].value = false, $('#' + buttonId).css('box-shadow', 'none');\n            } else {\n              this.btnList[i].value = true, $('#' + buttonId).css('box-shadow', 'rgba(50, 50, 93, 0.25) 0px 0px 0px -102px inset, rgba(0, 0, 0, 0.3) 0px 8px 26px -8px inset');\n            }\n          }\n        }\n\n        if (buttonId == this.btnList[1].label) {\n          this.btnList[0].value = false, $('#' + this.btnList[0].label).css('box-shadow', 'none');\n        } else if (buttonId == 'A-to-Z-btn') {\n          this.btnList[1].value = false, $('#' + this.btnList[1].label).css('box-shadow', 'none');\n        }\n      }\n    }\n\n  },\n\n  beforeMount() {},\n\n  mounted() {}\n\n};\nimport { assertExpressionStatement } from \"@babel/types\";","map":{"version":3,"mappings":"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","names":["data","cryptos","trieur","reponse","arrondir","askedForData","btnList","label","value","methods","UpdatePost","setTimeout","$","css","axios","get","then","response","catch","error","console","log","Sort","list","sort","a","b","symbol","SortRev","Tri","toUpperCase","i","length","x","y","includes","push","Arrondir","buttonId","Selected","indexOf","rep","beforeMount","mounted","assertExpressionStatement"],"sourceRoot":"","sources":["D:\\Mes travaux\\Vue Js\\crypto-labs\\src\\components\\HelloWorld.vue"],"sourcesContent":["<!-- nécéssite l'importation de jQuery et Axios -->\n<template>\n  <button @click=\"UpdatePost\" id=\"updateBtn\">Actualiser</button>\n  <button @click=\"Sort(this.reponse), Selected('A-to-Z-btn')\" id=\"A-to-Z-btn\">A &rarr; Z</button>\n  <button @click=\"SortRev(this.reponse), Selected('Z-to-A-btn')\" id=\"Z-to-A-btn\">Z &rarr; A</button>\n  <button @click=\"Arrondir(), Selected('arrondirBtn')\" id=\"arrondirBtn\">Mode Pro</button>\n  <input\n    type=\"text\"\n    v-model=\"trieur\"\n    placeholder=\"Cherchez une devise ici\"\n    @change=\"this.Tri(this.trieur)\"\n  />\n  <button @click=\"Tri(this.trieur)\">Trier</button>\n  <section id=\"crypto-main\">\n    <div class=\"items\" v-for=\"crypto in reponse\" v-bind:key=\"crypto.id\">\n      <div class=\"symbols\" >\n        <span v-if=\"arrondir\">{{ crypto.symbol.slice(0,6) }}<span v-if=\"crypto.symbol.length > 6\">...</span></span>\n        <span v-else>{{ crypto.symbol }}</span>\n      </div>\n      <div class=\"rest\">\n        <div class=\"lastPrice\" @click=\"Arrondir\">\n          <span v-if=\"arrondir\">{{ parseFloat(crypto.lastPrice).toFixed(4) }} $</span\n          >\n          <span v-else>{{ crypto.lastPrice }}$</span>\n        </div>\n        <div class=\"priceChangePercent\">\n          <span>{{ crypto.priceChangePercent }} % </span>\n          <img\n            v-if=\"crypto.priceChangePercent[0] != '-'\"\n            class=\"rowEvolve\"\n            src=\"../../public/images/augmenter.png\"\n            width=\"20\"\n          />\n          <img\n            v-if=\"crypto.priceChangePercent[0] == '-'\"\n            class=\"rowEvolve\"\n            src=\"../../public/images/augmenter.png\"\n            width=\"20\"\n            style=\"transform: scaleY(-1)\"\n          />\n        </div>\n        <div class=\"avgPrice\" @click=\"Arrondir\">\n          <span>Avg : </span>\n          <span v-if=\"arrondir\"\n            >{{ parseFloat(crypto.weightedAvgPrice).toFixed(4) }} $</span\n          >\n          <span v-else>{{ crypto.weightedAvgPrice }}$</span>\n        </div>\n        <div class=\"graphs\"></div>\n      </div>\n    </div>\n  </section>\n  <div v-if=\"this.askedForData\" id=\"loading\"></div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      cryptos: [\n        // {\n        //   symbol: \"ETHBTC\",\n        //   priceChange: \"0.00121100\",\n        //   priceChangePercent: \"-1.560\", // variation en % des dernières 24h\n        //   weightedAvgPrice: \"0.07852405\", // prix moyen\n        //   prevClosePrice: \"0.07761100\",\n        //   lastPrice: \"0.07882200\", // dernier prix\n        //   lastQty: \"0.26640000\", // dernière quantité\n        //   bidPrice: \"0.07882400\", // prix de l'offre\n        //   bidQty: \"6.95970000\", // quantité d'enchère de l'offre\n        //   askPrice: \"0.07882500\", // prix de la demande\n        //   askQty: \"6.65090000\", // quantité de la demande\n        //   openPrice: \"0.07761100\", // prix d'ouverture\n        //   highPrice: \"0.07942700\", // prix le plus bas\n        //   lowPrice: \"0.07702500\", // prix le plus haut\n        //   volume: \"88228.93570000\",\n        //   quoteVolume: \"6928.09329779\",\n        //   openTime: 1660224864370,\n        //   closeTime: 1660311264370,\n        //   firstId: 363558291,\n        //   lastId: 363789064,\n        //   count: 230774,\n        // },\n        // {\n        //   symbol: \"LTCBTC\",\n        //   priceChange: \"0.00001300\",\n        //   priceChangePercent: \"0.509\",\n        //   weightedAvgPrice: \"0.00257442\",\n        //   prevClosePrice: \"0.00255500\",\n        //   lastPrice: \"0.00256800\",\n        //   lastQty: \"8.23600000\",\n        //   bidPrice: \"0.00256600\",\n        //   bidQty: \"18.84000000\",\n        //   askPrice: \"0.00256700\",\n        //   askQty: \"34.77700000\",\n        //   openPrice: \"0.00255500\",\n        //   highPrice: \"0.00259500\",\n        //   lowPrice: \"0.00253900\",\n        //   volume: \"55189.66700000\",\n        //   quoteVolume: \"142.08134077\",\n        //   openTime: 1660224863958,\n        //   closeTime: 1660311263958,\n        //   firstId: 82565804,\n        //   lastId: 82582323,\n        //   count: 16520,\n        // },\n      ],\n      trieur: \"\",\n      reponse: [],\n      arrondir: true,\n      askedForData: false,\n      btnList: [\n        {\n          label : 'A-to-Z-btn', value : false\n        },\n        {\n          label : 'Z-to-A-btn', value : false\n        },\n        {\n          label : 'arrondirBtn', value : false\n        }\n      ]\n    };\n  },\n  methods: {\n    UpdatePost() {\n      if (!this.askedForData){\n        this.askedForData = true;\n        setTimeout(\n          () => {this.UpdatePost(), $( '#loading' ).css('opacity', '0') }, 2500\n          ); \n      }\n      axios\n        .get(\"https://api2.binance.com/api/v3/ticker/24hr\")\n        .then(\n          (response) => (this.cryptos = response.data),\n          (this.reponse = this.cryptos)\n        )\n        .catch(function (error) {\n          // handle error\n          console.log(error);\n        })\n        .then(function () {\n          // always executed\n        });\n\n      // setTimeout(\n        // () => {this.UpdatePost()}, 4000\n      // ); \n    },\n    Sort(list) {\n      list.sort((a, b) => {\n        return a.symbol > b.symbol ? 1 : -1;\n      });\n    },\n    SortRev(list) {\n      list.sort((b, a) => {\n        return a.symbol > b.symbol ? 1 : -1;\n      });\n    },\n    Tri(trieur) {\n      trieur = trieur.toUpperCase();\n      let reponse = [];\n      for (var i = 1; i < this.cryptos.length; i++) {\n        let x = this.cryptos[i];\n        let y = x.symbol;\n        if (y.includes(trieur)) {\n          reponse.push(x);\n        }\n      }\n      return (this.reponse = reponse);\n    },\n    Arrondir(buttonId) {\n      if (this.arrondir){\n        this.arrondir = false, $( '.items' ).css('width', '25%');\n      } else{\n        this.arrondir = true,\n        $( '.items' ).css('width','20%')\n      }\n    },\n    Selected(buttonId) {\n      let x = this.btnList.indexOf(buttonId);\n      if (this.btnList[x] == false){\n        \n      }else{\n         $( buttonId ).css('box-shadow', 'none');\n          for (var i = 0; i < this.btnList.length; i++){\n            if (this.btnList[i].label == buttonId) {\n              // the variable is defined\n              let rep = this.btnList[i].value;\n              if (rep){\n                this.btnList[i].value = false,\n                $( '#' + buttonId ).css('box-shadow', 'none')\n              }else{\n                this.btnList[i].value = true, \n                $( '#' + buttonId ).css('box-shadow', 'rgba(50, 50, 93, 0.25) 0px 0px 0px -102px inset, rgba(0, 0, 0, 0.3) 0px 8px 26px -8px inset');\n              }\n            }\n          }\n          if(buttonId == this.btnList[1].label){\n              this.btnList[0].value = false,\n              $( '#' + this.btnList[0].label ).css('box-shadow', 'none')\n            }else if(buttonId == 'A-to-Z-btn'){\n              this.btnList[1].value = false,\n              $( '#' + this.btnList[1].label ).css('box-shadow', 'none')\n            }\n        }\n      }\n    },\n  beforeMount() {\n  },\n  mounted() {},\n};\n\nimport { assertExpressionStatement } from \"@babel/types\";\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n#crypto-main {\n  width: 80%;\n}\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: block;\n  margin: 20px 10px;\n}\na {\n  color: #42b983;\n}\n.items {\n  width: 20%;\n  height: 70px;\n  border-radius: 15px;\n  background: #f5f5f5e0;\n  min-width: 200px;\n  margin: 1%;\n  padding-left: 20px;\n  font-size: 12px;\n  margin-top: 50px;\n}\n.items > div {\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  margin-right: 5px;\n}\n#crypto-main {\n  margin: auto;\n  margin-top: 50px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n}\n.symbols {\n  color: rgba(0, 0, 0, 0.795);\n  font-size: 18px;\n  font-weight: 700;\n}\n.items {\n  display: flex;\n  align-items: center;\n  box-shadow: rgba(100, 100, 111, 0.2) 0px 13px 9px 0px;\n}\n.rest {\n  margin: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\nimg {\n  vertical-align: bottom;\n}\n.avgPrice {\n  margin-top: 5px;\n    white-space: nowrap;\n}\n#loading{\n  width: 100px;\n  height: 10px;\n\n  position: fixed;\n  top: 50%;\n  left: 45%;\n  transform: translate(-50%, -50%);\n\n  border-radius: 10px;\n}\n#loading::before{\n  background-color:rgba(53, 66, 187, 0.39);\n\n  position: absolute;\n  content: \" \";\n  width: 10px;\n  height: 10px;\n\n  animation: loadingAnimation infinite 1s linear;\n}\n@keyframes loadingAnimation {\n  0%{\n    width: 10px;\n    margin-left: 90px;\n  }\n  25%{\n    width:100px;\n    margin-left: 0%;\n  }\n  50%{\n    width:10px;\n    margin-left: 0%;\n  }\n  75%{\n    width:100px;\n    margin-left: 0%;\n  }\n  100%{\n    width:10px;\n    margin-left: 90px;\n  }\n}\n\n\n</style>"]},"metadata":{},"sourceType":"module"}